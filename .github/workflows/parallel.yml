name: Run Cypress Tests using print-env
# run workflow on git push and git pull
on: [push, pull_request]
jobs:
  test:
    name: Install Docker
    # OS
    runs-on: ubuntu-latest
    # https://github.com/cypress-io/cypress-docker-images
    container: cypress/browsers:node12.18.3-chrome87-ff82
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: build

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          # Disable running of tests within install job
          runTests: false
          build: yarn build
    ui-chrome-tests:
      runs-on: ubuntu-latest
      container: cypress/browsers:node12.18.3-chrome87-ff82
      needs: install
      strategy:
        # when one test fails, DO NOT cancel the other containers, because this will kill Cypress processes leaving the Dashboard hanging ...
        # https://github.com/cypress-io/github-action/issues/48
        fail-fast: false
        matrix:
          # split tests across three containers in parallel
          containers: [1, 2, 3]
      steps:
        - name: Checkout
          # checks-out your repository so your workflow can access it
          uses: actions/checkout@v2
        # because of "record" and "parallel" parameters these containers will load balance all found tests among themselves
        - name: Cypress run
          # GitHub Action for running Cypress end-to-end tests
          uses: cypress-io/github-action@v2
          with:
            record: true
            parallel: true
            group: 'Actions example'
            tag: parallelDocker
          env:
            # pass the Dashboard record key as an environment variable
            CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
            # Recommended: pass the GitHub token lets this action correctly determine the unique run id necessary to re-run the checks (generates dynamically)
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}