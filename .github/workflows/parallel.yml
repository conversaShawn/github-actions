# name: Run Cypress Tests using print-env
# # run workflow on git push and git pull
# on: [push, pull_request]
# jobs:
#   test:
#     name: Install Docker
#     # OS
#     runs-on: ubuntu-latest
#     # https://github.com/cypress-io/cypress-docker-images
#     container: cypress/browsers:node12.18.3-chrome87-ff82
#     steps:
#     - name: Save build folder
#         uses: actions/upload-artifact@v2
#         with:
#           name: build
#           if-no-files-found: error
#           path: build
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Save build folder
#         uses: actions/upload-artifact@v2
#         with:
#           name: build
#           if-no-files-found: error
#           path: build

#       - name: Cypress install
#         uses: cypress-io/github-action@v2
#         with:
#           # Disable running of tests within install job
#           runTests: false
#           build: yarn build
#     ui-chrome-tests:
#       runs-on: ubuntu-latest
#       container: cypress/browsers:node12.18.3-chrome87-ff82
#       needs: install
#       strategy:
#         # when one test fails, DO NOT cancel the other containers, because this will kill Cypress processes leaving the Dashboard hanging ...
#         # https://github.com/cypress-io/github-action/issues/48
#         fail-fast: false
#         matrix:
#           # split tests across three containers in parallel
#           containers: [1, 2, 3]
#       steps:
#         - name: Checkout
#           # checks-out your repository so your workflow can access it
#           uses: actions/checkout@v2
#         # because of "record" and "parallel" parameters these containers will load balance all found tests among themselves
#         - name: Cypress run
#           # GitHub Action for running Cypress end-to-end tests
#           uses: cypress-io/github-action@v2
#           with:
#             record: true
#             parallel: true
#             group: 'Actions example'
#             tag: parallelDocker
#           env:
#             # pass the Dashboard record key as an environment variable
#             CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
#             # Recommended: pass the GitHub token lets this action correctly determine the unique run id necessary to re-run the checks (generates dynamically)
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Cypress Tests

on:
  push:
    # branches-ignore:
    #   - "renovate/**"

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      # # report machine parameters
      # - run: yarn cypress info
      # - run: node -p 'os.cpus()'
      # - run: yarn types
      # - run: yarn lint
      # - run: yarn test:unit:ci
      # - run: yarn build:ci

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: build

  # install-windows:
  #   runs-on: windows-2019
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cypress install
  #       uses: cypress-io/github-action@v2
  #       with:
  #         runTests: false
  #     report machine parameters
  #     - run: yarn cypress info
  #     - run: node -p 'os.cpus()'
  #     - run: yarn types
  #     - run: yarn lint
  #     - run: yarn test:unit:ci
  #     - run: yarn build:ci

  #     - name: Save build folder
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: build
  #         if-no-files-found: error
  #         path: build

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v2
        with:
          start: yarn start:ci
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          # group: "UI - Chrome"
          # spec: cypress/tests/ui/*
          tag: parallelDocker
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ui-chrome-mobile-tests:
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   container: cypress/browsers:node14.17.0-chrome88-ff89
  #   needs: install
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # leaving the Dashboard hanging ...
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1, 2, 3, 4, 5]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Download the build folders
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: build

  #     - name: "UI Tests - Chrome - Mobile"
  #       uses: cypress-io/github-action@v2
  #       with:
  #         config: "viewportWidth=375,viewportHeight=667"
  #         start: yarn start:ci
  #         wait-on: "http://localhost:3000"
  #         wait-on-timeout: 120
  #         browser: chrome
  #         record: true
  #         parallel: true
  #         group: "UI - Chrome - Mobile"
  #         spec: cypress/tests/ui/*
  #       env:
  #         CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ui-firefox-tests:
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   container:
  #     image: cypress/browsers:node14.17.0-chrome88-ff89
  #     options: --user 1001
  #   needs: install
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # leaving the Dashboard hanging ...
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1, 2, 3, 4, 5]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Download the build folders
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: build

  #     - name: "UI Tests - Firefox"
  #       uses: cypress-io/github-action@v2
  #       with:
  #         start: yarn start:ci
  #         wait-on: "http://localhost:3000"
  #         wait-on-timeout: 120
  #         browser: firefox
  #         record: true
  #         parallel: true
  #         group: "UI - Firefox"
  #         spec: cypress/tests/ui/*
  #       env:
  #         CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ui-firefox-mobile-tests:
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   container:
  #     image: cypress/browsers:node14.17.0-chrome88-ff89
  #     options: --user 1001
  #   needs: install
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # leaving the Dashboard hanging ...
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1, 2, 3, 4, 5]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Download the build folders
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: build

  #     - name: "UI Tests - Firefox - Mobile"
  #       uses: cypress-io/github-action@v2
  #       with:
  #         config: "viewportWidth=375,viewportHeight=667"
  #         start: yarn start:ci
  #         wait-on: "http://localhost:3000"
  #         wait-on-timeout: 120
  #         browser: firefox
  #         record: true
  #         parallel: true
  #         group: "UI - Firefox - Mobile"
  #         spec: cypress/tests/ui/*
  #       env:
  #         CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ui-windows-tests:
  #   timeout-minutes: 40
  #   runs-on: windows-2019
  #   needs: install-windows
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # leaving the Dashboard hanging ...
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1, 2, 3, 4, 5]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Download the build folders
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: build

  #     - name: "UI Tests - Electron - Windows"
  #       uses: cypress-io/github-action@v2
  #       with:
  #         start: yarn start:ci
  #         wait-on: "http://localhost:3000"
  #         wait-on-timeout: 120
  #         record: true
  #         parallel: true
  #         group: "UI - Electron - Windows"
  #         spec: cypress/tests/ui/*
  #       env:
  #         CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}